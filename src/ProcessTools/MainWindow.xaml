<Window x:Class="ProcessTools.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:ProcessTools.Core.Converters"
        xmlns:commands="clr-namespace:ProcessTools.Core.Commands"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        Title="ProcessTools" Height="449" Width="688" MinHeight="420" MinWidth="635"
        Icon="process.ico" Foreground="Black"
        Loaded="MainWindow_Loaded" DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Closed="Window_Closed" StateChanged="Window_StateChanged">
    <Window.Background>
        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
            <GradientStop Color="#FF0A222C" Offset="1" />
            <GradientStop Color="#FF224C5F" Offset="0.389" />
            <GradientStop Color="#FF1A546E" Offset="0.669" />
            <GradientStop Color="#FF09212B" />
            <GradientStop Color="#FF164961" Offset="0.183" />
        </LinearGradientBrush>
    </Window.Background>
    <Window.Resources>
        <converters:RangeToBooleanConverter x:Key="RangeToBooleanConverter" />
        <converters:ImageConverter x:Key="ImageConverter" />
        <commands:ActivateWindowCommand x:Key="ActivateWindowCommand" />
        <!--<DataTemplate x:Key="CellRangeTemplate">
            <TextBlock Foreground="White" />
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}, Converter={StaticResource RangeToBooleanConverter}}" Value="True">
                    <Setter TargetName="Text" Property="Background" Value="Orange" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>-->
        <DataTemplate x:Key="HeaderTemplateArrowUp">
            <StackPanel>
                <Path x:Name="arrowUp" StrokeThickness="1" Fill="White" Data="M 5,10 L 15,10 L 10,5 L 5,10" HorizontalAlignment="Center" />
                <TextBlock Text="{Binding }" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="HeaderTemplateArrowDown">
            <StackPanel>
                <Path x:Name="arrowDown" StrokeThickness="1" Fill="White" Data="M 5,5 L 10,10 L 15,5 L 5,5" HorizontalAlignment="Center" />
                <TextBlock Text="{Binding }" />
            </StackPanel>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <tb:TaskbarIcon x:Name="TrayIcon"
                        Visibility="Visible"
                        IconSource="process.ico"
                        ToolTipText="ProcessTools"
                        DoubleClickCommand="{StaticResource ActivateWindowCommand}"
                        DoubleClickCommandParameter="{Binding RelativeSource={RelativeSource Self}}">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Exit" Click="MenuItem_Click" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
        <TabControl BorderThickness="0" TabStripPlacement="Left" SelectionChanged="TabControl_SelectionChanged">
            <TabControl.Resources>
                <Style TargetType="Grid">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="0.919" />
                                <GradientStop Color="#FF00304B" Offset="1" />
                                <GradientStop Color="#FF00080D" Offset="0.717" />
                                <GradientStop Color="#FF001D2E" Offset="0.622" />
                                <GradientStop Color="#FF00273E" Offset="0.148" />
                                <GradientStop Color="#FF002B44" Offset="0.89" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid>
                                    <Border Name="Border" Margin="0,0,0,0"
                                            Background="Transparent"
                                            BorderBrush="Black"
                                            BorderThickness="1,1,1,1" CornerRadius="5">
                                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                                                          HorizontalAlignment="Center"
                                                          ContentSource="Header" Margin="12,2,12,2"
                                                          RecognizesAccessKey="True">
                                            <ContentPresenter.LayoutTransform>
                                                <RotateTransform Angle="270" />
                                            </ContentPresenter.LayoutTransform>
                                        </ContentPresenter>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Panel.ZIndex" Value="100" />
                                        <Setter TargetName="Border" Property="Background" Value="Red" />
                                        <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="Border" Property="Background">
                                            <Setter.Value>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FF068B5B" Offset="0.385" />
                                                    <GradientStop Color="#FF035D3D" />
                                                    <GradientStop Color="#FF04724A" Offset="0.798" />
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <!--<Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="Border" Property="Background" Value="DarkRed" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                                        <Setter Property="Foreground" Value="DarkGray" />
                                    </Trigger>-->
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <TabItem Header="Processes" BorderBrush="{x:Null}" Height="100"
                     Foreground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                <Grid>
                    <ListView x:Name="ListViewProcesses"
                              ItemsSource="{Binding ProcessesView, UpdateSourceTrigger=PropertyChanged}"
                              Margin="10,10,10,40" BorderBrush="{x:Null}" FontSize="13"
                              ScrollViewer.HorizontalScrollBarVisibility="Auto"
                              ScrollViewer.VerticalScrollBarVisibility="Auto"
                              GridViewColumnHeader.Click="ListViewColumnHeader_Click"
                              SelectionChanged="ListView_SelectionChanged"
                              IsSynchronizedWithCurrentItem="True">
                        <ListView.Resources>
                            <ContextMenu x:Key="ItemContextMenu">
                                <MenuItem Header="End Task" Click="EndTask_Click">
                                    <MenuItem.Icon>
                                        <Image Source="Content/Images/Kill.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Resume Task" Click="ResumeTask_Click">
                                    <MenuItem.Icon>
                                        <Image Source="Content/Images/Resume.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Suspend Task" Click="SuspendTask_Click">
                                    <MenuItem.Icon>
                                        <Image Source="Content/Images/Suspend.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Detailed Info" Click="DetailedInfo_Click">
                                    <MenuItem.Icon>
                                        <Image Source="Content/Images/ScreenInfo.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ListView.Resources>
                        <ListView.Background>
                            <SolidColorBrush Color="DarkGray" />
                        </ListView.Background>
                        <ListView.Foreground>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF0092FF" Offset="0" />
                                <GradientStop Color="#FF1175B9" Offset="1" />
                                <GradientStop Color="#FF2570A8" Offset="0.125" />
                                <GradientStop Color="#FF0E619B" Offset="0.304" />
                                <GradientStop Color="#FF094269" Offset="0.584" />
                                <GradientStop Color="#FF0C598E" Offset="0.782" />
                            </LinearGradientBrush>
                        </ListView.Foreground>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="ToolTip" Value="{Binding Path=Name}" />
                                <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                                <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView ColumnHeaderContainerStyle="{StaticResource CustomHeaderStyle}">
                                <GridViewColumn Header="PID" DisplayMemberBinding="{Binding Id}" Width="50" />
                                <GridViewColumn Header="Process Name" Width="130"
                                                HeaderTemplate="{StaticResource HeaderTemplateArrowUp}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Image Width="16" Height="16" Source="{Binding ProcessIcon}" />
                                                <TextBlock Text="{Binding Name}" Foreground="Black" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <!--<GridViewColumn Header="Status" Width="80" DisplayMemberBinding="{Binding Status}"
                                                x:Name="Status" />-->
                                <GridViewColumn Header="%CPU" Width="80">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding TotalProcessorTime}" />
                                                <TextBlock Text="%" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Memory" Width="80">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding PrivateWorkingSet}" />
                                                <TextBlock Text="MB" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <!--<GridViewColumn Header="Memory (Working Set)" Width="180">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding WorkingSetMemory}" />
                                                <TextBlock Text="MB" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Memory (Working Set Peak)" Width="220">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding WorkingSetPeak}" />
                                                <TextBlock Text="MB" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Memory (Virtual Bytes)" Width="160"
                                                DisplayMemberBinding="{Binding VirtualBytesMemory}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding WorkingSetPeak}" />
                                                <TextBlock Text="MB" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Memory (Virtual Bytes Peak)" Width="160"
                                                DisplayMemberBinding="{Binding VirtualBytesPeak}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding WorkingSetPeak}" />
                                                <TextBlock Text="MB" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Memory (Private Bytes)" Width="160"
                                                DisplayMemberBinding="{Binding PrivateBytesMemory}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding WorkingSetPeak}" />
                                                <TextBlock Text="MB" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Memory (Page File Bytes Peak)" Width="160"
                                                DisplayMemberBinding="{Binding PageFileBytesPeak}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding WorkingSetPeak}" />
                                                <TextBlock Text="MB" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>-->
                                <GridViewColumn Header="Threads" Width="80"
                                                DisplayMemberBinding="{Binding ThreadCount}" />
                                <GridViewColumn Header="Handles" Width="80"
                                                DisplayMemberBinding="{Binding HandleCount}" />
                                <!--<GridViewColumn Header="%Processor Time (User)" Width="220">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding UserProcessorTime}" />
                                                <TextBlock Text="%" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="%Processor Time (Privileged)" Width="220">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding PrivilegedProcessorTime}" />
                                                <TextBlock Text="%" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>-->
                                <!--<GridViewColumn Header="Description" DisplayMemberBinding="{Binding Description}"
                                                Width="120" />-->
                                <GridViewColumn Header="File Path" DisplayMemberBinding="{Binding FilePath}"
                                                Width="680" />
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <Button x:Name="EndTaskButton" Content="End Task" HorizontalAlignment="Right" Margin="0,0,10,10"
                            VerticalAlignment="Bottom" Width="64" Style="{StaticResource CustomButtonStyle}"
                            Click="EndTask_Click" IsEnabled="False" />
                    <CheckBox Content="View Processes From All Users" HorizontalAlignment="Left" Margin="15,0,0,10" RenderTransformOrigin="-2.549,-0.067" Background="White" Foreground="#FF08AED8" BorderBrush="White" Height="15" VerticalAlignment="Bottom" Width="184" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" />
                </Grid>
            </TabItem>
            <TabItem Header="MemoryWalker" BorderBrush="{x:Null}" Height="100"
                     Foreground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                <Grid TextBlock.FontSize="13">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF305E78" />
                            <GradientStop Color="#FFA6D3F0" Offset="1" />
                        </LinearGradientBrush>
                    </Grid.Background>
                    <DockPanel HorizontalAlignment="Left" Width="279">
                        <Grid Background="Transparent">
                            <Button Name="btnMemoryWalkerChooseProcess" Content="Choose Process" Width="101" Height="25" Click="ChooseProcess_Click" Margin="10,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                            <Label x:Name="lblMemoryWalkerChosenProcess" Content="No Process Chosen" TextBlock.TextAlignment="Center" Margin="61,40,0,0" Height="27" VerticalAlignment="Top" HorizontalAlignment="Left" Width="173" />
                            <Label Content="Value:" HorizontalAlignment="Left" Margin="15,179,0,0" Height="27" VerticalAlignment="Top" />
                            <TextBox x:Name="txtSearchValue" Margin="66,183,0,0" Background="White" Text="" MaxLines="1" TextWrapping="NoWrap" Height="23" VerticalAlignment="Top" HorizontalAlignment="Left" Width="188" />
                            <Label Content="Type:" HorizontalAlignment="Left" Margin="15,215,0,0" Height="26" VerticalAlignment="Top" />
                            <ComboBox x:Name="cbSearchValueType" Margin="114,215,0,0" Width="140" Height="26" SelectedIndex="2" VerticalAlignment="Top" HorizontalAlignment="Left">
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ComboBoxItem}">
                                        <Setter Property = "Background" Value="SkyBlue" />
                                        <Setter Property = "Foreground" Value="Black" />
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property = "Foreground" Value="Black" />
                                                <Setter Property = "Background" Value="White" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                                <ComboBoxItem x:Name="ArrayOfBytes" Content="ArrayOfBytes" />
                                <ComboBoxItem x:Name="Short" Content="Short" />
                                <ComboBoxItem x:Name="Integer" Content="Integer" />
                                <ComboBoxItem x:Name="Long" Content="Long" />
                                <ComboBoxItem x:Name="Float" Content="Float" />
                                <ComboBoxItem x:Name="Double" Content="Double" />
                                <ComboBoxItem x:Name="String" Content="String" />
                            </ComboBox>
                            <CheckBox x:Name="IsUnicode" Content="Unicode" IsChecked="True" HorizontalAlignment="Left" Margin="15,260,0,0" Height="16" VerticalAlignment="Top" />
                            <Button Name="btnFirstSearch" Content="First Search" HorizontalAlignment="Left" Width="84" Margin="61,105,0,0" Click="Search_Click" Height="28" VerticalAlignment="Top" />
                            <ProgressBar BorderThickness="10" x:Name="pbSearch" Maximum="100" HorizontalAlignment="Left" Margin="21,72,0,0" Width="233" Height="18" VerticalAlignment="Top" Foreground="#FF5BCB27" />
                            <Button Name="btnNextSearch" Click="btnNextSearch_Click" IsEnabled="False" Content="Next Search" HorizontalAlignment="Left" Width="77" Margin="150,105,0,0" Height="28" VerticalAlignment="Top" />
                            <Button Name="btnBrowseMemory" Click="btnBrowseMemory_Click"  Content="Browse Memory" HorizontalAlignment="Left" Margin="10,312,0,0" VerticalAlignment="Top" Width="101" Height="25"/>
                        </Grid>
                    </DockPanel>
                    <DockPanel Margin="279,0,0,0">
                        <Label Name="lblFoundAddresses" Content="Found addresses:" DockPanel.Dock="Top" Background="Silver" />
                        <DataGrid Name="FoundAddressGrid" Background="Transparent"
                                ItemsSource="{Binding FoundAddressesView, UpdateSourceTrigger=PropertyChanged}"
                                IsSynchronizedWithCurrentItem="True"
                                AutoGenerateColumns="False">
                            <DataGrid.ItemContainerStyle>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <EventSetter Event="MouseDoubleClick" Handler="FoundAddressGrid_Row_DoubleClick" />
                                </Style>
                            </DataGrid.ItemContainerStyle>
                            <DataGrid.ContextMenu>
                                <ContextMenu >
                                    <MenuItem Header="Browse Memory" Click="BrowseSelectedMemory_Click"  />
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding OffsetString}" ClipboardContentBinding="{Binding OffsetString}" Header="Address" IsReadOnly="True" />
                                <DataGridTextColumn Binding="{Binding Value}" ClipboardContentBinding="{Binding Value}" Header="Value" IsReadOnly="True" />
                                <DataGridTextColumn Binding="{Binding Type}" ClipboardContentBinding="{Binding Type}" Header="Type" IsReadOnly="True" />
                                <DataGridTextColumn Binding="{Binding MemoryType}" ClipboardContentBinding="{Binding MemoryType}" Header="MemoryType" IsReadOnly="True" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </DockPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Automation" BorderBrush="{x:Null}" Height="100"
                     Foreground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                <Grid Name="gAutomation" TextBlock.FontSize="12">
                    <Grid.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF5D5D5D" />
                                        <GradientStop Color="Black" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0.919" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="Label">
                            <Setter Property="Foreground" Value="White" />
                        </Style>
                    </Grid.Resources>
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF22565B" />
                            <GradientStop Color="#FF11D6CD" Offset="1" />
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Button Name="btnAutomationChooseProcess" Content="Choose Process" Height="25" Width="140" Click="btnAutomationChooseProcess_Click" Margin="10,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                    <Label Name="lblAutomationChosenProcess" Content="No Process Chosen" Height="29" MaxWidth="345" Width="345" Margin="155,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                    <Button x:Name="btnAutomationChooseWindow" Content="Choose Window" Height="25" Width="140" Click="btnAutomationChooseWindow_Click" Margin="10,44,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                    <Label x:Name="lblAutomationChosenWindow" Content="No Window Chosen" Height="29" MaxWidth="345" Width="345" Margin="155,44,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                    <Grid Margin="0,12,10,0" Height="60" VerticalAlignment="Top" HorizontalAlignment="Right" Width="70">
                        <Grid.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF5D5D5D" />
                                <GradientStop Color="Black" Offset="1" />
                            </LinearGradientBrush>
                        </Grid.Background>
                        <Image Name="imgAutomationStart" MouseDown="imgAutomationStart_MouseDown" HorizontalAlignment="Center" Height="48"  VerticalAlignment="Center" Width="48" Source="Content/Images/Resume_48.png" Stretch="Fill" />
                    </Grid>
                    <DockPanel Background="Transparent" HorizontalAlignment="Left" Width="220" Margin="0,78,0,0">
                        <GroupBox Header="Windows:">
                            <Grid Background="Transparent">
                                <ListBox Name="lbAutomationWindows" HorizontalAlignment="Left" Margin="10,45,0,10" Width="188"
                                 ItemsSource="{Binding AutomationWindowsView}">
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem">
                                            <EventSetter Event="Selected" Handler="ListBoxAutomationWindows_Item_Selected" />
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock FontWeight="bold" Text="{Binding Path=Handle}" />
                                                <TextBlock Text=", " />
                                                <TextBlock Text="{Binding Path=Title}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <Button x:Name="btnAutomationAddWindow" Content="Add" Height="25" Width="44" Click="btnAutomationAddWindow_Click"  Margin="10,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                <Button x:Name="btnAutomationRemoveWindow" Content="Remove" Height="25" Width="59" Click="btnAutomationRemoveWindow_Click"  Margin="54,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                            </Grid>
                        </GroupBox>
                    </DockPanel>
                    <DockPanel Margin="225,78,0,0" Background="Transparent">
                        <GroupBox Header="Automation:">
                            <DockPanel>
                                <Grid DockPanel.Dock="Top" Height="153" Background="Transparent">
                                    <Label Content="Selected Window:" HorizontalAlignment="Left" Margin="4,6,0,0" VerticalAlignment="Top" />
                                    <Label Name="lblAutomationSelectedWindow" Content="No Window Selected" MaxWidth="122" Width="122" HorizontalAlignment="Left" BorderThickness="1" BorderBrush="Black" Margin="113,5,0,0" VerticalAlignment="Top" />

                                    <Label Name="lblAutomationStatus" TextBlock.FontWeight="Bold" Content="Status: Stopped" MaxWidth="105" HorizontalAlignment="Left" BorderThickness="1" BorderBrush="Black" Margin="241,5,0,0" VerticalAlignment="Top" Width="105" />
                                    <Label x:Name="lblAutomationCount" TextBlock.TextAlignment="Center" TextBlock.FontWeight="Bold" Content="0" MaxWidth="34" HorizontalAlignment="Left" BorderThickness="1" BorderBrush="Black" Margin="351,5,0,0" VerticalAlignment="Top" Width="34" Height="28" />

                                    <Separator Height="5" Margin="0,37,0,111" />

                                    <Label Content="Automate:" HorizontalAlignment="Left" Margin="4,47,0,0" VerticalAlignment="Top" />
                                    <Button x:Name="btnAutomationKeyboard" Content="Keyboard" Height="25" Width="113" Click="btnAutomationKeyboard_Click"  Margin="69,48,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                    <Button x:Name="btnAutomationMouse" Content="Mouse" Height="25" Width="128" Click="btnAutomationMouse_Click"  Margin="182,48,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />

                                    <CheckBox Name="chAutomationIsAsync" Content="Async" HorizontalAlignment="Left" Margin="314,53,0,0" VerticalAlignment="Top"/>
                                    
                                    <Label Content="Selected Automation:" HorizontalAlignment="Left" Margin="4,84,0,0" VerticalAlignment="Top" Width="124" />
                                    <TextBox x:Name="txtAutomation" IsReadOnly="True" HorizontalAlignment="Left" Height="23" Margin="133,87,0,0" MaxLines="1" TextWrapping="NoWrap" Text="" VerticalAlignment="Top" Width="127" />
                                    <ComboBox Name="cbAutomationType" SelectionChanged="cbAutomationType_SelectionChanged" SelectedIndex="0" HorizontalAlignment="Left" Margin="270,87,0,0" VerticalAlignment="Top" Width="100" Height="23">
                                        <ComboBoxItem>Foreground</ComboBoxItem>
                                        <ComboBoxItem>Background</ComboBoxItem>
                                    </ComboBox>

                                    <Label Content="Cycle:" HorizontalAlignment="Left" Margin="7,122,0,0" VerticalAlignment="Top" Width="38" />
                                    <TextBox Name="txtCycle" HorizontalAlignment="Left" Height="23" Margin="50,126,0,0" MaxLines="1" TextWrapping="NoWrap" Text="1" VerticalAlignment="Top" Width="54" />

                                    <Label Content="Duration:" HorizontalAlignment="Left" Margin="121,122,0,0" VerticalAlignment="Top" Width="61" />
                                    <TextBox x:Name="txtDuration" HorizontalAlignment="Left" Height="23" Margin="181,125,0,0" MaxLines="1" TextWrapping="NoWrap" Text="0" VerticalAlignment="Top" Width="54" />

                                    <Button x:Name="btnAutomationAdd" Content="Add" Height="25" Width="45" Click="btnAutomationAdd_Click"  Margin="253,124,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                    <Button x:Name="btnAutomationRemove" Content="Remove" Height="25" Width="60" Click="btnAutomationRemove_Click"  Margin="298,124,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                    
                                </Grid>
                                <DataGrid Name="AutomationWindowInputsDataGrid"
                                          ItemsSource="{Binding AutomationWindowInputsView}"
                                          AutoGenerateColumns="False"
                                          IsSynchronizedWithCurrentItem="True">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding InputDataStringRepresentation}" ClipboardContentBinding="{Binding InputDataStringRepresentation}" Header="Automated Events" IsReadOnly="True" />
                                        <DataGridTextColumn Binding="{Binding CycleCount}" ClipboardContentBinding="{Binding CycleCount}" Header="Cycles" IsReadOnly="True" />
                                        <DataGridTextColumn Binding="{Binding Duration}" ClipboardContentBinding="{Binding Duration}" Header="Duration" IsReadOnly="True" />
                                    </DataGrid.Columns>
                                </DataGrid>
                            </DockPanel>
                        </GroupBox>
                    </DockPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Miscellaneous" BorderBrush="{x:Null}" Height="100"
                     Foreground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                <Grid>
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF5D5D5D" />
                            <GradientStop Color="LightGray" Offset="1" />
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Label Content="Find processes opened the specified file:" Foreground="White"
                           HorizontalAlignment="Left" Margin="15,14,0,0" VerticalAlignment="Top" />
                    <TextBox Name="txtChoosenFile" HorizontalAlignment="Left" Height="23" Margin="22,45,0,0"
                             MaxLines="1" TextWrapping="NoWrap" VerticalAlignment="Top" Width="187" />
                    <Button Content="Choose File" Background="Gray" Foreground="White" BorderThickness="1"
                            HorizontalAlignment="Left" Margin="209,45,0,0" VerticalAlignment="Top" Width="75"
                            Height="23" Click="ChooseFile_Click" />
                    <ListBox Name="ListBoxProcessesUsingTheFile" HorizontalAlignment="Left" Height="100"
                             Margin="22,73,0,0" VerticalAlignment="Top" Width="187" />
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>